{
  "mock_token": "token1234567890",
  "test_cases":[
    {
      "comments" : "get all items metadata",
      "args" : {
        "items": {
          "include": true, 
          "filter": {}, 
          "limit": null, 
          "skip": null
        }, 
        "times": {
          "before": null, 
          "notBefore": null
        }, 
        "series": {
          "items": false, 
          "aggregates": null
        }
      },
      "response" :{
        "jsonrpc": "2.0", 
        "id": "1",
        "result":{
          "items":
          { "c4medah70nh34fs577v0": {
            "name": "test_1234_id__a", 
            "type": "numeric", 
            "description": "first data inserted test", 
            "labels": {
              "data-source": [], 
              "location": []
            }, 
            "annotations": {}, 
            "engUnit": "", 
            "enumValues": {}, 
            "sourceType": "measurement", 
            "sampleInterval": null, 
            "gapDetection": null
          },
            "c4mf2i970nh34fs57k8g": {
              "name": "test_1234_id__b", 
              "type": "numeric", 
              "description": "test description", 
              "labels": {
                "data-source": [], 
                "location": [], 
                "test_label_py": [
                  "completed yes"
                  ]
                }, 
                "annotations": {}, 
                "engUnit": "", 
                "enumValues": {}, 
                "sourceType": "measurement", 
                "sampleInterval": null, 
                "gapDetection": null
            },
            "c4t201qj2jui2fkodqu0": {
              "name": "test_1234_id__c", 
              "type": "numeric", 
              "description": "test sin time", 
              "labels": {
                "data-source": [], 
                "location": [], 
                "new_label_py": [
                  "tag updated"
                ], 
                "test_label_py": [
                  "tag updated"
                ]
              }, 
              "annotations": {}, 
              "engUnit": "", 
              "enumValues": {}, 
              "sourceType": "measurement", 
              "sampleInterval": null, 
              "gapDetection": null
            }
          },
          "data": null
        },
        "error": null
      }
    },
    {
      "comments" : "get items matching criteria, return metadata and data (with stats)",
      "args": {
        "items": {
          "include": true,
          "filter": {
            "id": {
              "$in": [
                "test_1234_id__a",
                "test_1234_id__c"
              ]
            }
          }
        },
        "times": {
          "notBefore": "2020-01-01T01:00:00Z"
        },
        "series": {
          "items": true,
          "aggregates": true
        }
      },
      "response": {
        "jsonrpc": "2.0",
        "id": "1",
        "result": {
          "items": {
            "c4medah70nh34fs577v0": {
              "name": "test_1234_id__a",
              "type": "numeric",
              "description": "first data inserted test",
              "labels": {
                "data-source": [],
                "location": []
              },
              "annotations": {},
              "engUnit": "",
              "enumValues": {},
              "sourceType": "measurement",
              "sampleInterval": null,
              "gapDetection": null
            },
            "c4t201qj2jui2fkodqu0": {
              "name": "test_1234_id__c",
              "type": "numeric",
              "description": "test sin time",
              "labels": {
                "data-source": [],
                "location": [],
                "new_label_py": [
                  "tag updated"
                ],
                "test_label_py": [
                  "tag updated"
                ]
              },
              "annotations": {},
              "engUnit": "",
              "enumValues": {},
              "sourceType": "measurement",
              "sampleInterval": null,
              "gapDetection": null
            }
          },
          "data": {
            "times": [
              "2020-01-01T01:00:00Z",
              "2020-01-01T02:00:00Z",
              "2020-01-01T03:00:00Z"
            ],
            "series": {
              "count": [
                2,
                1,
                1
              ],
              "sum": [
                20.4,
                0.0,
                2.7
              ],
              "min": [
                10.2,
                0.0,
                2.7
              ],
              "max": [
                10.2,
                0.0,
                2.7
              ],
              "c4medah70nh34fs577v0": [
                10.2,
                null,
                2.7
              ],
              "c4t201qj2jui2fkodqu0": [
                10.2,
                0.0,
                null
              ]
            }
          },
          "error": null
        }
      }
    },
    {
      "comments" : "get items matching criteria, return only data",
      "args": {
        "items": {
          "include": false,
          "filter": {
            "id": {
              "$in": [
                "test_1234_id__a",
                "test_1234_id__c"
              ]
            }
          }
        },
        "times": {
          "notBefore": "2020-01-01T01:00:00Z"
        },
        "series": {
          "items": true,
          "aggregates": false
        }
      },
      "response": {
        "jsonrpc": "2.0",
        "id": "1",
        "result": {
          "items": null,
          "data": {
            "times": [
              "2020-01-01T01:00:00Z",
              "2020-01-01T02:00:00Z",
              "2020-01-01T03:00:00Z"
            ],
            "series": {
              "count": [
                2,
                1,
                1
              ],
              "sum": [
                20.4,
                0.0,
                2.7
              ],
              "min": [
                10.2,
                0.0,
                2.7
              ],
              "max": [
                10.2,
                0.0,
                2.7
              ],
              "c4medah70nh34fs577v0": [
                10.2,
                null,
                2.7
              ],
              "c4t201qj2jui2fkodqu0": [
                10.2,
                0.0,
                null
              ]
            }
          },
          "error": null
        }
      }
    },
    {
      "comments" : "get items matching criteria, data and metadata should be empty",
      "args": {
        "items": {
          "include": false,
          "filter": {
            "id": {
              "$in": [
                "test_1234_id__a",
                "test_1234_id__c"
              ]
            }
          }
        },
        "times": {
          "notBefore": "2020-01-01T01:00:00Z"
        },
        "series": {
          "items": false,
          "aggregates": false
        }
      },
      "response": {
        "jsonrpc": "2.0",
        "id": "1",
        "result": {"items": null, "data": null},
        "error": null}
      }
  ]
}